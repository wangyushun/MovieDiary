"""
Django settings for MovieDiaryProj project.

Generated by 'django-admin startproject' using Django 2.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'b*ywn5enft=bq7-3d8x*u9bpy**dex*)*=gfaad1nxx0vx85%u'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'wangyushun.pythonanywhere.com',
    '127.0.0.1',
    'localhost'
    ]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'ckeditor',
    'ckeditor_uploader',
    'imagekit',
    'movies',
    'comments',
    'blog',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',#csrf安全验证
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'MovieDiaryProj.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
            #os.path.join(BASE_DIR, 'blog_frontend\dist'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'MovieDiaryProj.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    # 'sqlite3': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    # },
    #自己调试用
    # 'default': {
    #     'ENGINE': 'django.db.backends.mysql',   # 数据库引擎
    #     'NAME': 'mydata',       # 你要存储数据的库名，事先要创建之
    #     'USER': 'root',         # 数据库用户名
    #     'PASSWORD': 'shun',     # 密码
    #     'HOST': 'localhost',    # 主机
    #     'PORT': '3306',         # 数据库使用的端口
    # },
    # PythonAnywhere上mysql配置
    'default' : { 
        'ENGINE' : 'django.db.backends.mysql',
        'NAME' : 'wangyushun$mydata',
        'USER' : 'wangyushun' ,
        'PASSWORD' : 'wys869588058' ,
        'HOST' : 'wangyushun.mysql.pythonanywhere-services.com' ,
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'collect_static')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
    # os.path.join(BASE_DIR, 'blog/static'),
]

#media

#MEDIA_URL是指从浏览器访问时的地址前缀，访问xxxxx/media/a.png 等于访问MEDIA_ROOT/a.png
MEDIA_URL="/media/" 
# MEDIA_URL="http://127.0.0.1:8000/media/" 
MEDIA_ROOT = os.path.join(BASE_DIR, "media")  

#ckeditor
CKEDITOR_UPLOAD_PATH = "upload/"
CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'Custom',
        'toolbar_Custom': [
            {'name': 'styles', 'items': ['Format', 'Bold', 'Italic', 'Underline']},
            {'name': 'paragraph',
             'items':['NumberedList', 'Outdent', 'Indent', 'JustifyLeft', 
             'JustifyCenter', 'JustifyRight', 'JustifyBlock']},           
            {'name': 'colors', 'items': ['TextColor', 'BGColor']},
            {'name': 'insert', 'items': ['Link', 'Unlink', 'Image', 'Smiley', 'SpecialChar']},
            {'name': 'tools', 
            'items':['RemoveFormat', 'Undo', 'Redo', 'SelectAll', 'Maximize', 'Source']},
        ],
        #配置上传图片时不需要的内联样式属性
        'disallowedContent': 'img{width,height,margin-left, margin-right};img[width,height,margin-left, margin-right];'
    },

    'comment_ckeditor': {
        'toolbar': 'Custom',
        'toolbar_Custom': [
            ['Bold', 'Italic', 'Underline'],
            ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
            ['Link', 'Unlink'],
            ['TextColor', 'BGColor'],
            ['Smiley', 'SpecialChar'],
            ['RemoveFormat', 'Undo', 'Redo', 'SelectAll'],
            
        ], 
        'width': 'auto',
        'height': '150', 
        'remove_plugins': 'elementspash',
        'resize_enabled': 'False',
        'tabSpaces': 4,
    },
}

#rest_framework app settings
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly', #默认API访问权限只读
    )
}

#自定义
MOVIE_LIST_COUNT_PER_PAGE = 8


